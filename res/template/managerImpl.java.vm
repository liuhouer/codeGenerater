#set ($bean = $modelName) 
#set ($beanlen = $bean.length())
#set ($Bean = $bean.substring(0,1).toUpperCase()+$bean.substring(1,$beanlen)) 

package ${suffix}.${domain}.manager.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import ${suffix}.${domain}.model.$Bean;
import ${suffix}.${domain}.manager.${Bean}Manager;
import ${suffix}.${domain}.dao.${Bean}Dao;

import java.util.LinkedHashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ${suffix}.${domain}.utils.MyConstant;
import ${suffix}.${domain}.utils.PageView;
import ${suffix}.${domain}.utils.QueryResult;

/**
 * @author bruce
 * @date ${date}
 * @email zhangyang226@gmail.com
 * @site http://blog.northpark.cn | http://northpark.cn | orginazation https://github.com/jellyband
 * 
 */
@Service("${bean}Manager")
public class ${Bean}ManagerImpl implements ${Bean}Manager {

    @Autowired
	private ${Bean}Dao ${bean.toLowerCase()}Dao;

	@Override
	public ${Bean} find${Bean}(Integer id) {
		return ${bean.toLowerCase()}Dao.find(id);
	}

	@Override
	public List<${Bean}> findAll() {
		return ${bean.toLowerCase()}Dao.findAll();
	}

	@Override
	public void add${Bean}(${Bean} ${bean.toLowerCase()}) {
		${bean.toLowerCase()}Dao.save(${bean.toLowerCase()});
	}

	@Override
	public boolean del${Bean}(Integer id) {
		${Bean} ${bean.toLowerCase()} = ${bean.toLowerCase()}Dao.find(id);
		${bean.toLowerCase()}Dao.delete(${bean.toLowerCase()});
		return true;
	}

	@Override
	public boolean update${Bean}(${Bean} ${bean.toLowerCase()}) {
		${bean.toLowerCase()}Dao.update(${bean.toLowerCase()});
		return true;
	}
	
	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public QueryResult<${Bean}> findByCondition(PageView<${Bean}> p,
			String wheresql, LinkedHashMap<String, String> order) {
		QueryResult qrs = ${bean.toLowerCase()}Dao.findByCondition(p.getStartindex(),
				MyConstant.MAXRESULT, wheresql, order);
		return qrs;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public QueryResult<${Bean}> findByCondition(String wheresql) {
		// TODO Auto-generated method stub
		QueryResult qrs = ${bean.toLowerCase()}Dao.findByCondition(
				 wheresql);
		return qrs;
	}
	
	@Override
	public List<${Bean}> querySql(String sql, Object... obj) {
		// TODO Auto-generated method stub
		return ${bean.toLowerCase()}Dao.querySql(sql, ${Bean}.class, obj);
	}

	@Override
	public List<${Bean}> querySql(String sql) {
		// TODO Auto-generated method stub
		return ${bean.toLowerCase()}Dao.querySql(sql, ${Bean}.class);
	}

	@Override
	public PageView<List<Map<String, Object>>> querySqlMap(String sql,PageView<List<Map<String,Object>>> pageView) {
		// TODO Auto-generated method stub
		return ${bean.toLowerCase()}Dao.QuerySQLForMapList(sql, pageView);
	}
	
	/* (non-Javadoc)
	 * 根据sql查询条数
	 */
	@Override
	public int countSql(String sql) {
		// TODO Auto-generated method stub
		return ${bean.toLowerCase()}Dao.countSql(sql);
	}

	/* (non-Javadoc)
	 * 根据hql查询条数
	 */
	@Override
	public int countHql(${Bean} m, String wheresql) {
		// TODO Auto-generated method stub
		return ${bean.toLowerCase()}Dao.countHql(m.getClass(), wheresql);
	}
}

